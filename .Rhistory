## John Hopkins Reproducible Research
## Course Project 1
## Loading and preprocessing the data
# Load packages
library(dplyr)
library(tidyr)
library(ggplot2)
# Download and load the data
unzip("activity.zip")
dat <- read.csv("activity.csv")
dat$date <- as.Date(dat$date, format = "%Y-%m-%d")
## What is mean total number of steps taken per day?
# Calculate the total number of steps taken per day
totalPerDay <- dat %>%
subset(steps != "NA") %>%
group_by(date) %>%
summarize_at("steps", sum)
# Make a histogram of the total number of steps taken each day
hist(totalPerDay$steps, breaks = 100, xlab = "Steps Range",
main = "Histogram of Total Steps Per Day", col = "black")
mean(totalPerDay$steps)
median(totalPerDay$steps)
## What is the average daily activity pattern?
# Make a time series plot (i.e. type = "1") of the 5-minute interval (x-axis)
# and the average number of steps taken, averaged across all days (y-axis)
avgPerInterval <- dat %>%
subset(steps != "NA") %>%
group_by(interval) %>%
summarize_at("steps", mean)
plot(avgPerInterval$interval, avgPerInterval$steps, type = "l",
xlab = "Interval", ylab = "Steps",
main = "Average Number of Steps per 5-Minute Interval")
# Which 5-minute interval, on average across all the days in the dataset,
# contains the maximum number of steps?
intervalMax <- subset(avgPerInterval, avgPerInterval$steps == max(avgPerInterval$steps))
intervalMax$interval
## Imputing missing values
# Calculate and report the total number of missing values in the dataset
# (i.e. the total number of rows with NAs)
sum(is.na(dat$steps))
# Fill in NAs using the mean for the missing 5-minute interval
dat_noNA <- data.frame(steps = integer(0), date = character(0), interval = integer(0))
for (i in 1:17568) {
dat_noNA <- rbind(dat_noNA, dat[i, ])
if (is.na(dat_noNA$steps[i])) {
dat_interval <- subset(dat, interval == dat_noNA$interval[i])
dat_noNA$steps[i] <- mean(dat_interval$steps, na.rm = TRUE)
}
}
# Make a histogram of the total number of steps taken each day and calculate
# and report the mean and median total number of steps taken per day. Do these
# values differ from the estimates from the first part of the assignment?
# What is the impact of imputing missing data on the estimates of the total
# daily number of steps?
totalPerDay_noNA <- dat_noNA %>%
subset(steps != "NA") %>%
group_by(date) %>%
summarize_at("steps", sum)
hist(totalPerDay_noNA$steps, breaks = 100, xlab = "Steps Range",
main = "Histogram of Total Steps Per Day", col = "black")
mean(totalPerDay_noNA$steps)
median(totalPerDay_noNA$steps)
## Are there differences in activity patterns between weekdays and weekends?
# Create a new factor variable in the dataset with two levels - "weekday" and
# "weekend" indicating whether a given date is a weekday or weekend day.
dat_noNA$day <- weekdays(dat_noNA$date)
dat_noNA$day <- factor(dat_noNA$day == "Saturday" | dat_noNA$day == "Sunday",
labels = c("weekday", "weekend"))
# Make a panel plot containing a time series plot (i.e type = "l") of the
# 5-minute interval (x-axis) and the average number of steps taken, averaged
# across all weekday days or weekend days (y-axis). See the README file in the
# GitHub repository to see an example of what this plot should look like this
# simulated data.
avgPerInterval_noNA <- dat_noNA %>%
group_by(interval, day) %>%
summarize_at("steps", mean)
xyplot(steps ~ interval | day, data = avgPerInterval_noNA, type = "l",
xlab = "Interval", ylab = "Steps",
main = "Average Number of Steps per 5-Minute Interval", layout = c(1,2))
library(lattice)
xyplot(steps ~ interval | day, data = avgPerInterval_noNA, type = "l",
xlab = "Interval", ylab = "Steps",
main = "Average Number of Steps per 5-Minute Interval", layout = c(1,2))
